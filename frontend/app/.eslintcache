[{"/frontend/app/src/index.js":"1","/frontend/app/src/reportWebVitals.js":"2","/frontend/app/src/store/reducers/index.js":"3","/frontend/app/src/components/Navbar.jsx":"4","/frontend/app/src/components/user/Settings.jsx":"5","/frontend/app/src/components/user/Login.jsx":"6","/frontend/app/src/components/user/Signup.jsx":"7","/frontend/app/src/store/reducers/AuthReducers.js":"8","/frontend/app/src/store/actions/AuthActions.js":"9","/frontend/app/src/store/utility.js":"10","/frontend/app/src/HOC/LoginRequired.jsx":"11","/frontend/app/src/App.jsx":"12","/frontend/app/src/components/list/Lists.jsx":"13","/frontend/app/src/store/reducers/authReducers.js":"14","/frontend/app/src/store/reducers/listReducer.jsx":"15","/frontend/app/src/store/actions/authActions.js":"16","/frontend/app/src/store/actions/apiUrl.js":"17","/frontend/app/src/store/actions/actionTypes.jsx":"18","/frontend/app/src/components/list/ListCreate.jsx":"19","/frontend/app/src/components/list/ListItem.jsx":"20","/frontend/app/src/store/actions/listActions.jsx":"21","/frontend/app/src/components/sublist/SubLists.jsx":"22","/frontend/app/src/store/reducers/sublistReducer.jsx":"23","/frontend/app/src/components/sublist/SubListItem.jsx":"24","/frontend/app/src/components/sublist/SubListCreate.jsx":"25","/frontend/app/src/store/actions/sublistActions.jsx":"26","/frontend/app/src/components/task/Tasks.jsx":"27","/frontend/app/src/store/actions/taskActions.jsx":"28","/frontend/app/src/components/task/TaskItem.jsx":"29","/frontend/app/src/components/task/TaskCreate.jsx":"30","/frontend/app/src/store/reducers/taskReducer.jsx":"31","/frontend/app/src/store/actions/subtaskActions.jsx":"32","/frontend/app/src/store/reducers/subtaskReducer.jsx":"33","/frontend/app/src/components/task/subtask/Subtasks.jsx":"34","/frontend/app/src/components/task/subtask/SubtaskItem.jsx":"35","/frontend/app/src/components/task/subtask/SubtaskCreateForm.jsx":"36","/frontend/app/src/components/task/subtask/SubtaskForm.jsx":"37"},{"size":829,"mtime":1609177121660,"results":"38","hashOfConfig":"39"},{"size":362,"mtime":1606894827516,"results":"40","hashOfConfig":"39"},{"size":479,"mtime":1609330029738,"results":"41","hashOfConfig":"39"},{"size":930,"mtime":1609156833987,"results":"42","hashOfConfig":"39"},{"size":5806,"mtime":1609324314533,"results":"43","hashOfConfig":"39"},{"size":1468,"mtime":1608563638136,"results":"44","hashOfConfig":"39"},{"size":2748,"mtime":1608563639578,"results":"45","hashOfConfig":"39"},{"size":1255,"mtime":1608543695421,"results":"46","hashOfConfig":"39"},{"size":1673,"mtime":1608558070216,"results":"47","hashOfConfig":"39"},{"size":130,"mtime":1608461507890,"results":"48","hashOfConfig":"39"},{"size":1123,"mtime":1608722877267,"results":"49","hashOfConfig":"39"},{"size":2138,"mtime":1609330078134,"results":"50","hashOfConfig":"39"},{"size":669,"mtime":1609177771660,"results":"51","hashOfConfig":"39"},{"size":1255,"mtime":1608563699346,"results":"52","hashOfConfig":"39"},{"size":1519,"mtime":1608635801650,"results":"53","hashOfConfig":"39"},{"size":1645,"mtime":1608564274962,"results":"54","hashOfConfig":"39"},{"size":74,"mtime":1608633205777,"results":"55","hashOfConfig":"39"},{"size":852,"mtime":1609329530262,"results":"56","hashOfConfig":"39"},{"size":2578,"mtime":1608745339781,"results":"57","hashOfConfig":"39"},{"size":4913,"mtime":1608745361202,"results":"58","hashOfConfig":"39"},{"size":2368,"mtime":1608716427165,"results":"59","hashOfConfig":"39"},{"size":1183,"mtime":1609242914790,"results":"60","hashOfConfig":"39"},{"size":1620,"mtime":1608732302424,"results":"61","hashOfConfig":"39"},{"size":4313,"mtime":1608744166802,"results":"62","hashOfConfig":"39"},{"size":2349,"mtime":1608744267113,"results":"63","hashOfConfig":"39"},{"size":2395,"mtime":1608732208887,"results":"64","hashOfConfig":"39"},{"size":1172,"mtime":1609236269142,"results":"65","hashOfConfig":"39"},{"size":3422,"mtime":1609412038324,"results":"66","hashOfConfig":"39"},{"size":8576,"mtime":1609514940936,"results":"67","hashOfConfig":"39"},{"size":2333,"mtime":1608808820961,"results":"68","hashOfConfig":"39"},{"size":1526,"mtime":1608808966980,"results":"69","hashOfConfig":"39"},{"size":3453,"mtime":1609412832553,"results":"70","hashOfConfig":"39"},{"size":1643,"mtime":1609330006993,"results":"71","hashOfConfig":"39"},{"size":752,"mtime":1609513443261,"results":"72","hashOfConfig":"39"},{"size":2937,"mtime":1609513757004,"results":"73","hashOfConfig":"39"},{"size":1129,"mtime":1609519132566,"results":"74","hashOfConfig":"39"},{"size":1319,"mtime":1609514953333,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"6ghasv",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"78"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/frontend/app/src/index.js",[],["154","155"],"/frontend/app/src/reportWebVitals.js",[],"/frontend/app/src/store/reducers/index.js",[],"/frontend/app/src/components/Navbar.jsx",[],"/frontend/app/src/components/user/Settings.jsx",[],"/frontend/app/src/components/user/Login.jsx",[],"/frontend/app/src/components/user/Signup.jsx",[],"/frontend/app/src/store/reducers/AuthReducers.js",[],["156","157"],"/frontend/app/src/store/actions/AuthActions.js",[],"/frontend/app/src/store/utility.js",[],"/frontend/app/src/HOC/LoginRequired.jsx",[],"/frontend/app/src/App.jsx",[],"/frontend/app/src/components/list/Lists.jsx",[],"/frontend/app/src/store/reducers/authReducers.js",[],"/frontend/app/src/store/reducers/listReducer.jsx",[],"/frontend/app/src/store/actions/authActions.js",[],"/frontend/app/src/store/actions/apiUrl.js",[],"/frontend/app/src/store/actions/actionTypes.jsx",[],"/frontend/app/src/components/list/ListCreate.jsx",[],"/frontend/app/src/components/list/ListItem.jsx",[],"/frontend/app/src/store/actions/listActions.jsx",[],"/frontend/app/src/components/sublist/SubLists.jsx",[],"/frontend/app/src/store/reducers/sublistReducer.jsx",[],"/frontend/app/src/components/sublist/SubListItem.jsx",[],"/frontend/app/src/components/sublist/SubListCreate.jsx",[],"/frontend/app/src/store/actions/sublistActions.jsx",[],"/frontend/app/src/components/task/Tasks.jsx",[],"/frontend/app/src/store/actions/taskActions.jsx",[],"/frontend/app/src/components/task/TaskItem.jsx",["158","159","160","161"],"import React, { useCallback, useContext, useMemo, useState } from 'react'\r\nimport * as taskActions from '../../store/actions/taskActions'\r\nimport * as subtaskActions from '../../store/actions/subtaskActions'\r\nimport { connect } from 'react-redux'\r\nimport SubTasks from \"./subtask/Subtasks\"\r\nimport SubTaskForm from \"./subtask/SubtaskForm\"\r\nimport SubTaskCreateForm from \"./subtask/SubtaskCreateForm\"\r\n\r\nconst taskItemContext = React.createContext()\r\nconst { Provider } = taskItemContext\r\nconst TaskItem = ({ style: userStyles = {}, task, subtasks, onDelete, onEdit, onComplete, onSetComplete, onSubtaskComplete, onUncomplete, onSubtaskUncomplete, children }) => {\r\n    const styles = {\r\n        ...userStyles,\r\n        background: task.completed ? ('var(--button-color') : ('var(--item-background-color)'),\r\n        color: task.completed ? ('var(--button-text-color') : ('var(--item-text-color)'),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\"\r\n\r\n    }\r\n\r\n    const handleDeleteClick = () => {\r\n        onDelete(task.id)\r\n    }\r\n\r\n    const handleEdit = (title) => {\r\n        onEdit(task.id, title)\r\n    }\r\n\r\n    const handleCompleteClick = (is_completed) => {\r\n        if (is_completed) {\r\n            onUncomplete(task.id);\r\n            let attached_subtasks = [];\r\n            if (subtasks[0] !== undefined) {\r\n                attached_subtasks = subtasks.filter(subtask => subtask.task === task.id)\r\n            }\r\n            attached_subtasks.forEach(subtask => onSubtaskUncomplete(subtask.id, subtask.task, subtask.title))\r\n\r\n        } else {\r\n            onComplete(task.id)\r\n            let attached_subtasks = [];\r\n            if (subtasks[0] !== undefined) {\r\n                attached_subtasks = subtasks.filter(subtask => subtask.task === task.id)\r\n            }\r\n            attached_subtasks.forEach(subtask => onSubtaskComplete(subtask.id, subtask.task, subtask.title))\r\n        }\r\n    }\r\n\r\n\r\n    const shouldTaskComplete = (id) => {\r\n        let bool = true\r\n\r\n\r\n        let attached_subtasks = [];\r\n        if (subtasks[0] !== undefined) {\r\n            attached_subtasks = subtasks.filter(subtask => subtask.task === task.id)\r\n        }\r\n        attached_subtasks.forEach(subtask => {\r\n            bool = bool && subtask.completed || subtask.id === id\r\n\r\n        })\r\n\r\n\r\n        bool && onSetComplete(task.id, task.sublist, task.title)\r\n\r\n    }\r\n\r\n\r\n\r\n    const value = useMemo(() => {\r\n        return {\r\n            task,\r\n            handleDeleteClick,\r\n            handleEdit,\r\n            handleCompleteClick,\r\n            subtasks\r\n        }\r\n    }, [task, handleDeleteClick, handleEdit, subtasks])\r\n\r\n    const divStyle = {\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        width: \"100%\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\"\r\n    }\r\n\r\n    return (\r\n        <Provider value={value} >\r\n            <div className=\"item\" style={styles}>\r\n                <div style={divStyle}>{children}</div>\r\n                <SubTasks task_id={task.id} task={task} shouldTaskComplete={shouldTaskComplete} />\r\n            </div>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nconst TaskInfo = ({ style: userStyles = {} }) => {\r\n    const styles = {\r\n        ...userStyles\r\n    }\r\n\r\n    const { task } = useContext(taskItemContext)\r\n\r\n    return (\r\n        <div className=\"info\" style={styles} >\r\n            {task.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TaskCompleter = ({ style: userStyles = {} }) => {\r\n\r\n    const styles = {\r\n        ...userStyles\r\n    }\r\n\r\n    const { task, handleCompleteClick } = useContext(taskItemContext)\r\n\r\n    const handleChange = () => {\r\n        handleCompleteClick(task.completed)\r\n    }\r\n\r\n    return (\r\n        <div style={styles}>\r\n            <label className=\"complete-container\">\r\n                <input type=\"checkbox\" onChange={handleChange} checked={task.completed} />\r\n                <span className=\"checkmark-complete\"></span>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TaskParams = ({ style: userStyles = {}, children }) => {\r\n    const styles = {\r\n        ...userStyles\r\n    }\r\n\r\n    return (\r\n        <div className=\"params\" style={styles}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TaskEdit = ({ style: userStyles = {} }) => {\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const handleClick = () => setIsEditing(true)\r\n\r\n    const styles = {\r\n        ...userStyles\r\n    }\r\n\r\n    const editor_style = useMemo(() => {\r\n        return isEditing ? { display: \"flex\" } : { display: \"none\" }\r\n    }, [isEditing])\r\n\r\n    return (\r\n        <div style={styles}>\r\n            <button className=\"edit-button\" onClick={handleClick}>\r\n                <i className=\"far fa-edit\" />\r\n            </button>\r\n            <TaskEditForm style={editor_style} setIsEditing={setIsEditing} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TaskEditForm = ({ style: userStyles = {}, containerStyle: userContainerStyles = {}, setIsEditing }) => {\r\n\r\n    const { handleEdit, task, subtasks } = useContext(taskItemContext)\r\n\r\n    const styles = {\r\n        ...userStyles\r\n    }\r\n\r\n    const container_styles = {\r\n        ...userContainerStyles\r\n    }\r\n\r\n    const [title, setTitle] = useState(task.title)\r\n\r\n    const handleChange = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        handleEdit(title)\r\n        var forms = document.getElementsByClassName('subtask-form')\r\n        for (let i = 0; i < forms.length; i++) {\r\n            forms[i].requestSubmit()\r\n        }\r\n    }\r\n\r\n    const handleClose = (e) => {\r\n        if (e.target.getAttribute('name') === \"outside\") {\r\n            setIsEditing(false)\r\n        }\r\n    }\r\n\r\n    var subtasks_form = null\r\n    if (subtasks[0] !== undefined) {\r\n        subtasks_form = subtasks.filter(subtask => subtask.task === task.id).map(subtask => <SubTaskForm key={\"subtaskform\" + subtask.key} subtask={subtask} />)\r\n    }\r\n\r\n    return (\r\n        <div className=\"full-window-outside\" style={styles} name=\"outside\" onClick={handleClose}>\r\n            <div className=\"full-window-container\" style={container_styles}>\r\n                <div className=\"form-container\">\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input type=\"text\" name=\"title\" value={title} onChange={handleChange} placeholder=\"Titre\" />\r\n\r\n                        <button>Enregistrer</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"subtask-forms\">\r\n                    {subtasks_form}\r\n                    <SubTaskCreateForm task_id={task.id} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst TaskDelete = ({ style: userStyles = {} }) => {\r\n\r\n    const { handleDeleteClick } = useContext(taskItemContext)\r\n\r\n    const styles = {\r\n        ...userStyles\r\n    }\r\n\r\n    return (\r\n        <button style={styles} className=\"delete-button\" onClick={handleDeleteClick}>\r\n            <i className=\"far fa-trash\" />\r\n        </button>\r\n    )\r\n}\r\n\r\nconst Usage = ({ task, subtasks, onDelete, onEdit, onComplete, onSetComplete, onSubtaskComplete, onUncomplete, onSubtaskUncomplete }) => {\r\n    return (\r\n        <TaskItem task={task} subtasks={subtasks} onDelete={onDelete} onEdit={onEdit} onComplete={onComplete} onSetComplete={onSetComplete} onSubtaskComplete={onSubtaskComplete} onUncomplete={onUncomplete} onSubtaskUncomplete={onSubtaskUncomplete}>\r\n            <TaskCompleter />\r\n            <TaskInfo />\r\n            <TaskParams>\r\n                <TaskEdit />\r\n                <TaskDelete />\r\n            </TaskParams>\r\n        </TaskItem>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        subtasks: state.subtasks.subtasks\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onDelete: (id) => dispatch(taskActions.deleteTask(id)),\r\n        onEdit: (id, title) => dispatch(taskActions.editTask(id, title)),\r\n        onComplete: (id) => dispatch(taskActions.completeTask(id)),\r\n        onSetComplete: (id, sublist, title) => dispatch(taskActions.changeTask(id, sublist, title, true)),\r\n        onSubtaskComplete: (id, task, title) => dispatch(subtaskActions.changeSubTask(id, task, title, true)),\r\n        onUncomplete: (id) => dispatch(taskActions.uncompleteTask(id)),\r\n        onSubtaskUncomplete: (id, task, title) => dispatch(subtaskActions.changeSubTask(id, task, title, false))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Usage)","/frontend/app/src/components/task/TaskCreate.jsx",[],"/frontend/app/src/store/reducers/taskReducer.jsx",[],"/frontend/app/src/store/actions/subtaskActions.jsx",[],"/frontend/app/src/store/reducers/subtaskReducer.jsx",[],"/frontend/app/src/components/task/subtask/Subtasks.jsx",[],"/frontend/app/src/components/task/subtask/SubtaskItem.jsx",["162"],"import React, { useContext, useMemo } from 'react'\r\nimport * as subtaskActions from '../../../store/actions/subtaskActions'\r\nimport * as taskActions from '../../../store/actions/taskActions'\r\nimport { connect } from 'react-redux'\r\n\r\nconst subtaskItemContext = React.createContext()\r\nconst { Provider } = subtaskItemContext\r\nconst SubTaskItem = ({ style: userStyles = {}, task, subtask, onComplete, onUncomplete, onTaskUncomplete, shouldTaskComplete, children }) => {\r\n    const styles = {\r\n        ...userStyles,\r\n        color: subtask.completed ? ('var(--button-text-color') : ('var(--item-text-color)')\r\n\r\n    }\r\n\r\n    const handleCompleteClick = (is_completed) => {\r\n        if (is_completed) {\r\n            onUncomplete(subtask.id)\r\n            onTaskUncomplete(task.id, task.sublist, task.title)\r\n        } else {\r\n            onComplete(subtask.id)\r\n            shouldTaskComplete(subtask.id)\r\n        }\r\n\r\n    }\r\n\r\n    const value = useMemo(() => {\r\n        return {\r\n            subtask,\r\n            handleCompleteClick\r\n        }\r\n    }, [subtask])\r\n\r\n    return (\r\n        <Provider value={value} >\r\n            <div style={styles} className=\"subtask-item\">\r\n                {children}\r\n            </div>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nconst SubTaskInfo = ({ style: userStyles = {} }) => {\r\n    const styles = {\r\n        ...userStyles\r\n    }\r\n\r\n    const { subtask } = useContext(subtaskItemContext)\r\n\r\n    return (\r\n        <div style={styles} >\r\n            {subtask.title}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst SubTaskCompleter = ({ style: userStyles = {} }) => {\r\n\r\n    const styles = {\r\n        ...userStyles\r\n    }\r\n\r\n    const { subtask, handleCompleteClick } = useContext(subtaskItemContext)\r\n\r\n\r\n    const handleChange = () => {\r\n        handleCompleteClick(subtask.completed)\r\n    }\r\n\r\n    return (\r\n        <div style={styles}>\r\n            <label className=\"complete-container\">\r\n                <input type=\"checkbox\" onChange={handleChange} checked={subtask.completed} />\r\n                <span className=\"checkmark-complete\" style={{ transform: \"scale(.8)\" }}></span>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Usage = ({ task, subtask, onComplete, onUncomplete, onTaskUncomplete, shouldTaskComplete }) => {\r\n    return (\r\n        <SubTaskItem task={task} subtask={subtask} onComplete={onComplete} onUncomplete={onUncomplete} onTaskUncomplete={onTaskUncomplete} shouldTaskComplete={shouldTaskComplete}>\r\n            <SubTaskCompleter />\r\n            <SubTaskInfo />\r\n        </SubTaskItem>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onComplete: (id) => dispatch(subtaskActions.completeSubTask(id)),\r\n        onUncomplete: (id) => dispatch(subtaskActions.uncompleteSubTask(id)),\r\n        onTaskUncomplete: (id, sublist, title) => dispatch(taskActions.changeTask(id, sublist, title, false))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Usage)","/frontend/app/src/components/task/subtask/SubtaskCreateForm.jsx",[],"/frontend/app/src/components/task/subtask/SubtaskForm.jsx",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"163","replacedBy":"167"},{"ruleId":"165","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":1,"column":17,"nodeType":"171","messageId":"172","endLine":1,"endColumn":28},{"ruleId":"173","severity":1,"message":"174","line":60,"column":25,"nodeType":"175","messageId":"176","endLine":60,"endColumn":27},{"ruleId":"173","severity":1,"message":"174","line":60,"column":46,"nodeType":"175","messageId":"176","endLine":60,"endColumn":48},{"ruleId":"177","severity":1,"message":"178","line":79,"column":8,"nodeType":"179","endLine":79,"endColumn":55,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"178","line":31,"column":8,"nodeType":"179","endLine":31,"endColumn":17,"suggestions":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],["182"],["183"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'handleCompleteClick'. Either include it or remove the dependency array.","ArrayExpression",["184"],["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [task, handleDeleteClick, handleEdit, handleCompleteClick, subtasks]",{"range":"190","text":"191"},"Update the dependencies array to be: [handleCompleteClick, subtask]",{"range":"192","text":"193"},[2653,2700],"[task, handleDeleteClick, handleEdit, handleCompleteClick, subtasks]",[1049,1058],"[handleCompleteClick, subtask]"]